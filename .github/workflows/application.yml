name: Application

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - "adr/**"
      - "docs/**"
      - "*.md"
  pull_request:
    paths-ignore:
      - "adr/**"
      - "docs/**"
      - "*.md"
  release:
    types: [created]
  schedule:
    -
      cron: "0 1 * * 6" # Run at 1am every Saturday
  workflow_dispatch: ~

jobs:
  coding-standard-checks:
    runs-on: ubuntu-latest

    name: "Static checks (PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }})"

    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        php: ["7.4", "8.0"]
        symfony: ["^4.4", "5.2.*", "5.3.*"]

    steps:
      -
        name: Validate Twig templates
        run: bin/console lint:twig src
        if: always() && steps.end-of-setup.outcome == 'success'

      -
        name: Validate Yaml files
        run: bin/console lint:yaml src
        if: always() && steps.end-of-setup.outcome == 'success'

      -
        name: Run PHPStan
        run: vendor/bin/phpstan analyse
        if: always() && steps.end-of-setup.outcome == 'success'

      -
        name: Run ECS
        run: vendor/bin/ecs
        if: always() && steps.end-of-setup.outcome == 'success'

  notify-about-build-failure:
    runs-on: ubuntu-latest

    if: failure() && (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'release')

    needs: [coding-standard-checks]

    name: "Notify about build failure"

    timeout-minutes: 5

    steps:
      -
        name: "Process data"
        id: process-data
        shell: bash
        run: |
          echo "::set-output name=branch::$(echo ${{ github.ref }} | sed 's/refs\/heads\///g' | sed 's/refs\/tags\///g')"
          echo "::set-output name=sha::$(echo ${{ github.sha }} | cut -c 1-12)"

      -
        name: "Notify on Slack"
        uses: edge/simple-slack-notify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.SLACK_WEBHOOK_URL != null
        with:
          channel: "#builds"
          username: "GitHub Actions"
          text: |
            *<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | ${{ github.workflow }} #${{ github.run_number }} build on ${{ github.repository }} repository has failed for ${{ steps.process-data.outputs.branch }} branch.>*

            ${{ needs.static-checks.result == 'success' && ':+1:' || ':x:' }} Static checks
            ${{ needs.test-application-without-frontend.result == 'success' && ':+1:' || ':x:' }} Test non-JS application
            ${{ needs.test-application-with-frontend.result == 'success' && ':+1:' || ':x:' }} Test JS application

            _ _ _ _ _ _ _
          color: "danger"
          fields: |
            [
                { "title": "Repository", "value": "<https://github.com/${{ github.repository }} | ${{ github.repository }}>", "short": true },
                { "title": "Action", "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | ${{ github.workflow }} #${{ github.run_number }}>", "short": true },
                { "title": "Reference", "value": "<https://github.com/${{ github.repository }}/tree/${{ steps.process-data.outputs.branch }} | ${{ steps.process-data.outputs.branch }}>", "short": true },
                { "title": "Commit", "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }} | ${{ steps.process-data.outputs.sha }}>", "short": true },
                { "title": "Event", "value": "${{ github.event_name }}", "short": true }
            ]
